'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/**
 * Fn Index: 
 *  obj_dotToLiteral
 *  obj_deepMerge
 *  obj_createDeepFromDotNames
*/

/**
 * Return a string property accessor value to the actual object value
 * @param str
 * @param obj
 */
var obj_dotToLiteral = exports.obj_dotToLiteral = function obj_dotToLiteral(str, obj) {
  return str.split('.').reduce(function (o, i) {
    return o ? o[i] : {};
  }, obj);
};

/**
	 * Merge nested objects:
	 * Source: https://github.com/jashkenas/underscore/issues/88
	 * @param target
	 * @param source
	 * @returns {*}
	 */
var obj_deepMerge = exports.obj_deepMerge = function obj_deepMerge(target, source) {
  for (var key in source) {
    var original = target[key];
    var next = source[key];
    if (original && next && (typeof next === 'undefined' ? 'undefined' : _typeof(next)) == "object") {
      appUtils.deepMerge(original, next);
    } else {
      target[key] = next;
    }
  }
  return target;
};

/** 
 * Converts an object using dot syntax property names to a deep object.
 * Created by Maikel, 10.23.17
 * ie. 
 *  { "parent.child.grand" : "test val"} becomes
 *  {
 *    parent : {
 *      child : {
 *        grand : "test val"
 *      }
 *    }
 *  }
*/
var obj_createDeepFromDotNames = exports.obj_createDeepFromDotNames = function obj_createDeepFromDotNames(obj) {
  var finalObj = {};

  Object.keys(obj).forEach(function (key) {
    var tmpObj = finalObj;
    var lastPart = '';
    var keyParts = key.split('.');

    for (var i = 0; i < keyParts.length - 1; i++) {
      var currentPart = keyParts[i];
      if (!tmpObj[currentPart]) {
        tmpObj[currentPart] = {};
      }
      tmpObj = tmpObj[currentPart];
    }
    tmpObj[keyParts[keyParts.length - 1]] = obj[key];
  });
  return finalObj;
};