'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Google Analytics Service
 * 
 * Adds the ga script to clients, then offers event trigger functions for custom events
 */
var GA = function () {
  function GA(key) {
    _classCallCheck(this, GA);

    this.key = key;

    if (this.key) {
      this._injectScripts(this.key);
    }
  }

  _createClass(GA, [{
    key: '_injectScripts',
    value: function _injectScripts(key) {
      window.addEventListener('load', function () {
        var head = document.getElementsByTagName('head')[0];
        var script1 = document.createElement('script');
        var code = '(function(i,s,o,g,r,a,m){i[\'GoogleAnalyticsObject\']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,\'script\',\'https://www.google-analytics.com/analytics.js\',\'ga\');ga(\'create\', \'' + key + '\', \'auto\');ga(\'send\', \'pageview\');';

        script1.type = 'text/javascript';
        script1.innerText = code;

        head.appendChild(script1);
      });
    }
  }, {
    key: 'event',
    value: function event(_ref) {
      var eventCategory = _ref.eventCategory,
          eventAction = _ref.eventAction,
          eventLabel = _ref.eventLabel,
          _ref$eventValue = _ref.eventValue,
          eventValue = _ref$eventValue === undefined ? 0 : _ref$eventValue;

      if (this.key && window.ga) {
        window.ga('send', {
          hitType: 'event',
          eventCategory: eventCategory,
          eventAction: eventAction,
          eventLabel: Date.now() + ' | ' + eventLabel,
          eventValue: eventValue,
          nonInteraction: false
        });
      }
    }
  }]);

  return GA;
}();

exports.default = GA;