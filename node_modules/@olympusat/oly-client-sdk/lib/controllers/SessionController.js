'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SessionController = SessionController;

var _Storage = require('../Storage');

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _jwtDecode = require('jwt-decode');

var _jwtDecode2 = _interopRequireDefault(_jwtDecode);

var _fun = require('../utils/fun');

var _constants = require('../utils/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Handles interfacing with Session functionality ie. token setting/retrieval
 */
function SessionController(options) {
  var storage = new _Storage.Storage(options);

  var setCredentials = function setCredentials(creds) {
    return storage.set(_constants.CREDENTIALS_LS_KEY, creds);
  };

  var getToken = function getToken() {
    return storage.get(_constants.AUTH_TOKEN_KEY);
  };

  var getCredentials = function getCredentials() {
    return storage.get(_constants.CREDENTIALS_LS_KEY);
  };

  var refreshSession = function refreshSession() {
    return window.Oly.Auth0.refreshSession();
  };

  var checkAndOrRenewToken = function checkAndOrRenewToken() {
    return new _bluebird2.default(function (resolve, reject) {
      // HandleAuth is the primary gateway to SSO checks
      window.Oly.Auth0.handleAuthentication(window.location.hash, function (res) {
        resume(resolve);
      });

      function resume(resolve) {
        if (window.Oly.Permissions.loggedIn()) {
          resolve(getToken());
        } else {
          refreshSession().then(function (_ref) {
            var idToken = _ref.idToken;
            return resolve(idToken);
          });
        }
      }
    });
  };

  return {
    setCredentials: setCredentials,
    getToken: getToken,
    getCredentials: getCredentials,
    refreshSession: refreshSession,
    checkAndOrRenewToken: checkAndOrRenewToken
  };
}