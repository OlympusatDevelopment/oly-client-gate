'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UsersModel = UsersModel;

var _utils = require('../utils');

var _utils2 = _interopRequireDefault(_utils);

var _graphql = require('../graphql');

var _graphql2 = _interopRequireDefault(_graphql);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function UsersModel(options) {

  var getById = function getById(args) {
    if (args.hasOwnProperty('entityUUID') && !args.entityUUID) {
      return _utils2.default.call(options.ENDPOINT_USERS, _graphql2.default.users.getLoggedIn(args), { key: 'getUser' });
    } else {
      return _utils2.default.call(options.ENDPOINT_USERS, _graphql2.default.users.getById(args), { key: 'getUser' });
    }
  };

  var getCurrent = function getCurrent() {
    return new _bluebird2.default(function (resolve, reject) {
      return _utils2.default.call(options.ENDPOINT_USERS, _graphql2.default.users.getLoggedIn(), { key: 'getUser' }).then(resolve);
    });
  };

  var getWithApps = function getWithApps(args) {
    return new _bluebird2.default(function (resolve, reject) {
      // @todo combine this graph ql request
      _bluebird2.default.all([_utils2.default.call(options.ENDPOINT_USERS, _graphql2.default.users.getById(args), { key: 'getUser' }), _utils2.default.call(options.ENDPOINT_APPS, _graphql2.default.apps.list(args), { key: 'apps' })]).then(function (res) {
        resolve({
          user: res[0],
          apps: res[1]
        });
      });
    });
  };

  return {
    getById: getById,
    getCurrent: getCurrent,
    getWithApps: getWithApps
  };
}